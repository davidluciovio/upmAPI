// <auto-generated />
using System;
using LogicData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicData.Migrations.ProductionControl
{
    [DbContext(typeof(ProductionControlContext))]
    partial class ProductionControlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("upm_pc")
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.DataProductionLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductionLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataProductionLocation", "upm_pc");
                });

            modelBuilder.Entity("Entity.Models.DataProductionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductionModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DataProductionModel", "upm_pc");
                });

            modelBuilder.Entity("Entity.Models.DataProductionPartNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DataProductionLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DataProductionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductionPartNumberDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductionPartNumberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SNP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DataProductionLocationId");

                    b.HasIndex("DataProductionModelId");

                    b.ToTable("ProductionPartNumber", "upm_pc", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("Entity.Models.ProductionControlArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AreaName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AreaName")
                        .IsUnique();

                    b.ToTable("Area", "upm_pc");
                });

            modelBuilder.Entity("Entity.Models.ProductionControlComponentAlert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("CancelDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductionPartNumberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SNP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductionPartNumberId");

                    b.HasIndex("StatusId");

                    b.ToTable("ComponentAlert", "upm_pc");
                });

            modelBuilder.Entity("Entity.Models.ProductionControlStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("StatusDescription")
                        .IsUnique();

                    b.ToTable("Status", "upm_pc");
                });

            modelBuilder.Entity("Entity.Models.DataProductionPartNumber", b =>
                {
                    b.HasOne("Entity.Models.DataProductionLocation", "DataProductionLocation")
                        .WithMany("ProductionPartNumbers")
                        .HasForeignKey("DataProductionLocationId");

                    b.HasOne("Entity.Models.DataProductionModel", "DataProductionModel")
                        .WithMany("ProductionPartNumbers")
                        .HasForeignKey("DataProductionModelId");

                    b.Navigation("DataProductionLocation");

                    b.Navigation("DataProductionModel");
                });

            modelBuilder.Entity("Entity.Models.ProductionControlComponentAlert", b =>
                {
                    b.HasOne("Entity.Models.DataProductionPartNumber", "ProductionPartNumber")
                        .WithMany("ComponentsAlerts")
                        .HasForeignKey("ProductionPartNumberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.ProductionControlStatus", "Status")
                        .WithMany("ComponentsAlerts")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionPartNumber");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Entity.Models.DataProductionLocation", b =>
                {
                    b.Navigation("ProductionPartNumbers");
                });

            modelBuilder.Entity("Entity.Models.DataProductionModel", b =>
                {
                    b.Navigation("ProductionPartNumbers");
                });

            modelBuilder.Entity("Entity.Models.DataProductionPartNumber", b =>
                {
                    b.Navigation("ComponentsAlerts");
                });

            modelBuilder.Entity("Entity.Models.ProductionControlStatus", b =>
                {
                    b.Navigation("ComponentsAlerts");
                });
#pragma warning restore 612, 618
        }
    }
}
