// <auto-generated />
using System;
using LogicData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogicData.Migrations.Data
{
    [DbContext(typeof(DataContext))]
    [Migration("20251030140635_InitializeDataContext")]
    partial class InitializeDataContext
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("upm")
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entity.Models.DataProductionArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("AreaDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AreaDescription")
                        .IsUnique();

                    b.ToTable("ProductionArea", "upm");
                });

            modelBuilder.Entity("Entity.Models.DataProductionLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LocationDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LocationDescription")
                        .IsUnique();

                    b.ToTable("ProductionLocation", "upm");
                });

            modelBuilder.Entity("Entity.Models.DataProductionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelDescription")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ModelDescription")
                        .IsUnique();

                    b.ToTable("ProductionModel", "upm");
                });

            modelBuilder.Entity("Entity.Models.DataProductionPartNumber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartNumberDescription")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PartNumberName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("ProductionLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SNP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartNumberName")
                        .IsUnique();

                    b.HasIndex("ProductionLocationId");

                    b.HasIndex("ProductionModelId");

                    b.ToTable("ProductionPartNumber", "upm");
                });

            modelBuilder.Entity("Entity.Models.DataStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("StatusDescription")
                        .IsUnique();

                    b.ToTable("Status", "upm");
                });

            modelBuilder.Entity("Entity.Models.DataWorkShift", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<int>("SecondsQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ShiftDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("ShiftDescription")
                        .IsUnique();

                    b.ToTable("WorkShift", "upm");
                });

            modelBuilder.Entity("Entity.Models.DataProductionPartNumber", b =>
                {
                    b.HasOne("Entity.Models.DataProductionLocation", "DataProductionLocation")
                        .WithMany("ProductionPartNumbers")
                        .HasForeignKey("ProductionLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entity.Models.DataProductionModel", "DataProductionModel")
                        .WithMany("ProductionPartNumbers")
                        .HasForeignKey("ProductionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataProductionLocation");

                    b.Navigation("DataProductionModel");
                });

            modelBuilder.Entity("Entity.Models.DataProductionLocation", b =>
                {
                    b.Navigation("ProductionPartNumbers");
                });

            modelBuilder.Entity("Entity.Models.DataProductionModel", b =>
                {
                    b.Navigation("ProductionPartNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
